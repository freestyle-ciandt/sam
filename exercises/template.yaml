AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: Template básico para você resolver seus exercícios

Resources:
  DojoClientes02: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: "id"
          AttributeType: "N"
        - AttributeName: "cidade"
          AttributeType: "S"
        
      KeySchema: 
        - AttributeName: "id"
          KeyType: "HASH"

      ProvisionedThroughput: 
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
      TableName: "Dojo-recuperacao-clientes-02"
      GlobalSecondaryIndexes: 
        - 
          IndexName: "cidade-index"
          KeySchema: 
            - 
              AttributeName: "cidade"
              KeyType: "HASH"

          Projection: 
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: 3
            WriteCapacityUnits: 3

  DojoClientes02Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Auth:
        UsagePlan:
          UsagePlanName: DojoClientes02Auth
          CreateUsagePlan: PER_API
          Quota:
            Limit: 500
            Period: MONTH
          Throttle:
            BurstLimit: 100
            RateLimit: 50

  DojoClientes02ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "./02/"
      Runtime: nodejs14.x
      Handler: app.handler
      Events:
        DojoClientes02ApiKey:
          Type: Api
          Properties:
            Path: /exercise-02/{id}
            Method: get
            RestApiId: !Ref DojoClientes02Api
            Auth:
              ApiKeyRequired: true
      Environment:
        Variables:
          TableName: !Ref DojoClientes02
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DojoClientes02

  DojoClientes02ApiCidadeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "./02/"
      Runtime: nodejs14.x
      Handler: app.handlerCidade
      Events:
        DojoClientes02ApiKey:
          Type: Api
          Properties:
            Path: /exercise-02/cidade/{cidade}
            Method: get
            RestApiId: !Ref DojoClientes02Api
            Auth:
              ApiKeyRequired: true
      Environment:
        Variables:
          TableName: !Ref DojoClientes02
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DojoClientes02

  DojoProdutos03Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-produtos

  DojoProdutos03: 
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Sub ${AWS::StackName}-produtos-03
      AttributeDefinitions: 
        - AttributeName: "id"
          AttributeType: "S"
        
      KeySchema: 
        - AttributeName: "id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST

  DojoProdutos03Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "./03/"
      Runtime: nodejs14.x
      Handler: app.handlerProduto
      Environment:
        Variables:
          TableName: !Ref DojoProdutos03
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DojoProdutos03

Outputs:
  BucketName:
    Value: !Ref DojoProdutos03Bucket
  LambdaArn:
    Value: !GetAtt DojoProdutos03Function.Arn
  TableName:
    Value: !Ref DojoProdutos03